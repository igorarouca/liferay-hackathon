# Environment-specific configuration of Liferay Portal

# This file needs to be included from some 'portal-ext.properties' that Liferay reads.
#
# In Liferay Workspace-generated project, this is done using '/configs/common/portal-ext.properties'
# where line 'include-and-override=${default.liferay.home}/portal-ext.env.properties' is present.

##
## JDBC
##

	#
    # Hypersonic
    #
    jdbc.default.driverClassName=org.hsqldb.jdbcDriver
    jdbc.default.url=jdbc:hsqldb:${liferay.home}/data/hsql/lportal
    jdbc.default.username=sa
    jdbc.default.password=

	#
	# MySQL
	#
	#jdbc.default.driverClassName=com.mysql.jdbc.Driver
	#jdbc.default.url=jdbc:mysql://localhost/lportal?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
	#jdbc.default.username=
	#jdbc.default.password=

##
## Document Library Portlet
##
	# Document Library store implementation. Check portal.properties for complete list of implementations.
	# and their properties.
    dl.store.impl=com.liferay.portlet.documentlibrary.store.AdvancedFileSystemStore
	#dl.store.impl=com.liferay.portlet.documentlibrary.store.S3Store

    #
    # FileSystemStore
    #
	# Setting is used when c.l.p.documentlibrary.store.FileSystemStore or c.l.p.documentlibrary.store.AdvancedFileSystemStore
	# is used as DL store implementation.
	# For clustered environments, point to NFS location mounted in all machines in the cluster.
	#
	# TODO this might not be valid in Liferay 7.0 any more, most likely moved to OSGi's configuration admin
    #dl.store.file.system.root.dir=${liferay.home}/data/document_library

	#
    # S3Store
    #
	# Settings are used when c.l.p.documentlibrary.store.S3Store is used as DL store implementation
	# TODO this might not be valid in Liferay 7.0 any more, most likely moved to OSGi's configuration admin
    #dl.store.s3.access.key=
    #dl.store.s3.secret.key=
    #dl.store.s3.bucket.name=

##
## Cluster Link
##
	# TODO check how clustering is set up in Liferay 7.0; looks like these properties
	# are still present in https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/portal.properties#L5462

	#cluster.link.enabled=true

	# In addition to setting 'ehcache.cluster.link.replication.enabled' to true,
	# you also need to deploy 'ehcache-cluster-web'
	#
	#ehcache.cluster.link.replication.enabled=true

	# If you want to see extra logging related to jGroups and ClusterLink, set
	# following property to true.
	#cluster.executor.debug.enabled=true

	# If you cannot use multicast to discover Liferay nodes (for jGroups), you
	# will need to specify another discovery mechanism. Easiest is to use these
	# two properties and place the referenced file into
	#   (A) '/configs/common/liferay_home' or
	#   (B) '/configs/[environment]/liferay_home':
	#
	# Complete tutorial:
	# * https://in.liferay.com/web/global-services/wiki/-/wiki/Main/Clustering+Without+Multicast
	#
	# In general, use JDBC_PING as preferred options
	#   * see reply from Mike Han: https://zulip.com/#narrow/near/50607151/stream/gs-consulting/topic/Clustering.20with.20Unicast
	#   * for AWS, you can eventually use S3_PING as well
	#   * for deployments with shared file system, you can also use FILE_PING.
	#
	#cluster.link.channel.properties.control=${liferay.home}/cluster-config.xml
    #cluster.link.channel.properties.transport.0=${liferay.home}/cluster-config.xml