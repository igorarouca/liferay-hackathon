<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 -->
<Server port="8005" shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
    <!-- Security listener. Documentation at /docs/config/listeners.html
    <Listener className="org.apache.catalina.security.SecurityListener" />
    -->
    <!--APR library loader. Documentation at /docs/apr.html -->
    <!--<Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />-->
    <!-- Prevent memory leaks due to use of particular java/javax APIs-->
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

    <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
    -->
    <Service name="Catalina">

        <!--The connectors can use a shared executor, you can define one or more named thread pools-->
        <!--
        <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
            maxThreads="150" minSpareThreads="4"/>
        -->

        <!-- TODO consider:
                * installing APR libs and switching to APR protocols (you also
                    have to enable 'org.apache.catalina.core.AprLifecycleListener') or
                * using non-blocking NIO connector -->

        <!-- A "Connector" represents an endpoint by which requests are received
             and responses are returned.

             Protocol "HTTP/1.1" selects either:
                * 'org.apache.coyote.http11.Http11Protocol' (BIO) or
                * 'org.apache.coyote.http11.Http11AprProtocol' (APR)

             To use non-blocking Java connector, use protocol:
                * 'org.apache.coyote.http11.Http11NioProtocol' (NIO)
                * 'org.apache.coyote.http11.Http11Nio2Protocol' (NIO2)

             See https://tomcat.apache.org/tomcat-8.0-doc/config/http.html#Connector_Comparison
        -->

        <Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000"
                   URIEncoding="UTF-8" enableLookups="false"
                   minSpareThreads="50" maxThreads="100" />


        <!-- Example HTTP connector for requests which were originally HTTPS and the SSL
                is terminated on load balancer, like Apache httpd or ELB in AWS. -->

        <Connector port="8081" protocol="HTTP/1.1" connectionTimeout="20000"
                   URIEncoding="UTF-8" enableLookups="false"
                   minSpareThreads="50" maxThreads="100"
                   secure="true" scheme="https" />


        <!-- Example AJP connector, see https://tomcat.apache.org/tomcat-8.0-doc/config/ajp.html
            The same setup as on HTTP connector can be used in case of SSL termination on load balancer. -->

        <!-- protocol="AJP/1.3" selects either
                * 'org.apache.coyote.ajp.AjpProtocol' (BIO) or
                * 'org.apache.coyote.ajp.AjpAprProtocol' (APR)

            To use non-blocking Java connector, use protocol:
                * 'org.apache.coyote.ajp.AjpNioProtocol' (NIO)

            http://www.tomcatexpert.com/blog/2011/06/17/nio-implementation-ajp-connector
        -->
        <!--
        <Connector port="8009" protocol="org.apache.coyote.ajp.AjpNioProtocol" URIEncoding="UTF-8"
                   minSpareThreads="50" maxThreads="100"
                   connectionTimeout="600000" enableLookups="false" />
        -->

        <!-- values from 6.2 deployment checklist (HTTP connector) -->
        <!--<Connector maxThreads="75" minSpareThreads="50" maxConnections="16384"-->
                    <!--port="8080" connectionTimeout="600000" redirectPort="8443"-->
                    <!--URIEncoding="UTF-8"-->
                    <!--socketBuffer="-1" maxKeepAliveRequests="-1" address="xxx.xxx.xxx.xxx"/>-->
        
        <!-- 'jvmRoute' can also set on command line, with -DjvmRoute=... in e.g. bin/setenv.sh -->
        <Engine name="Catalina" defaultHost="localhost">
            <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">
            </Host>
        </Engine>
    </Service>
</Server>
